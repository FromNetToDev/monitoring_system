service {
  name = "cadvisor_exporter"
  id   = "cadvisor_exporter_{{ inventory_hostname }}"
  
  address = "{{ ansible_host }}"
  port    = {{ cadvisor_port }}
  
  tags = [
    {% for group in group_names %}
    "{{ group }}",
    {% endfor %}
    {% for tag in consul_service_tags %}
    "{{ tag }}",
    {% endfor %}
    {% for tag in custom_tags %}
    "{{ tag }}",
    {% endfor %}
    "cadvisor", "docker", "containers"
  ]

  meta = {
    version      = "{{ cadvisor_version }}"
    datacenter   = "{{ datacenter | default('dc1') }}"
    environment  = "{{ environment }}"
    ansible_host = "{{ inventory_hostname }}"
    installed_at = "{{ ansible_date_time.iso8601 }}"
    docker_version = "{{ docker_version_check.stdout | default('unknown') }}"
  }

  check {
    id       = "cadvisor_metrics"
    name     = "cAdvisor Metrics Endpoint"
    http     = "http://{{ ansible_host }}:{{ cadvisor_port }}/metrics"
    method   = "GET"
    interval = "{{ consul_check_interval }}"
    timeout  = "{{ consul_check_timeout }}"
    
    deregister_critical_service_after = "{{ consul_deregister_critical_after }}"
    
    header {
      User-Agent = ["Consul Health Check"]
    }
  }

  check {
    id       = "cadvisor_api"
    name     = "cAdvisor API Health"
    http     = "http://{{ ansible_host }}:{{ cadvisor_port }}/api/v1.3/machine"
    method   = "GET"
    interval = "60s"
    timeout  = "10s"
    
    deregister_critical_service_after = "{{ consul_deregister_critical_after }}"
  }

  check {
    id       = "cadvisor_container"
    name     = "cAdvisor Container Status"
    args     = ["docker", "ps", "--filter", "name=cadvisor", "--filter", "status=running", "--quiet"]
    interval = "45s"
    timeout  = "10s"
  }

  {% if enable_docker_daemon_check | default(true) %}
  check {
    id       = "docker_daemon"
    name     = "Docker Daemon Health"
    args     = ["docker", "info"]
    interval = "120s"
    timeout  = "15s"
  }
  {% endif %}
}
